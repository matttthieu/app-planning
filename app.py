# app.pyimport streamlit as stimport pandas as pdimport datetimedef generate_response(review_text, rating):    if rating >= 4:        return f"Merci beaucoup pour votre avis positif ! Nous sommes ravis que vous ayez appr√©ci√© votre exp√©rience. Au plaisir de vous revoir bient√¥t !"    elif rating == 3:        return f"Merci pour votre retour. Nous prenons en compte vos commentaires pour nous am√©liorer. N'h√©sitez pas √† nous faire part de vos suggestions lors de votre prochaine visite."    else:        return f"Nous vous pr√©sentons nos sinc√®res excuses pour cette exp√©rience qui ne correspond pas √† nos standards. Pouvez-vous nous contacter directement pour que nous puissions rectifier la situation?"def main():    st.title("ü§ñ Assistant R√©ponse Avis Clients")        # Interface principale    st.write("Bienvenue dans votre assistant de r√©ponse aux avis clients")        # Zone de saisie    review = st.text_area("Entrez l'avis du client ici :", height=100)    rating = st.slider("Note du client :", 1, 5, 5)    platform = st.selectbox("Plateforme :", ["Google", "TripAdvisor"])        if st.button("G√©n√©rer une r√©ponse"):        if review:            response = generate_response(review, rating)            st.text_area("R√©ponse g√©n√©r√©e :", response, height=150)                        # Sauvegarder l'historique            if 'history' not in st.session_state:                st.session_state.history = []                        st.session_state.history.append({                'date': datetime.datetime.now().strftime("%Y-%m-%d %H:%M"),                'platform': platform,                'rating': rating,                'review': review,                'response': response            })        # Afficher l'historique    if st.session_state.get('history'):        st.subheader("Historique des r√©ponses")        df = pd.DataFrame(st.session_state.history)        st.dataframe(df)                # Bouton d'export        if st.button("Exporter l'historique (CSV)"):            csv = df.to_csv(index=False)            st.download_button(                "üì• T√©l√©charger CSV",                csv,                "historique_reponses.csv",                "text/csv"            )if __name__ == "__main__":    main()